<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="31" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2024-05-29" time="14:19:47">
  <environment clr-version="8.0.4" user-domain="FREEDOMPAY1" machine-name="CHUNT-0723" os-version="10.0.22621" user="CHunt" cwd="C:\source\PowerShellHumanizer" nunit-version="2.5.8.0" platform="Microsoft Windows 11 Pro|C:\WINDOWS|\Device\Harddisk0\Partition3" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="1.5873" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\source\PowerShellHumanizer\tests\PowerShellHumanizer.Tests.ps1" executed="True" result="Success" success="True" time="1.5873" asserts="0" description="C:\source\PowerShellHumanizer\tests\PowerShellHumanizer.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Functions" executed="True" result="Success" success="True" time="1.2938" asserts="0" description="Functions">
            <results>
              <test-suite type="TestFixture" name="Functions.Pluralize" executed="True" result="Success" success="True" time="0.0286" asserts="0" description="Functions.Pluralize">
                <results>
                  <test-case description="Should convert man to men" name="Functions.Pluralize.Should convert man to men" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should convert an array" name="Functions.Pluralize.Should convert an array" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Functions.Singularize" executed="True" result="Success" success="True" time="0.0846" asserts="0" description="Functions.Singularize">
                <results>
                  <test-suite type="ParameterizedTest" name="Functions.Singularize.Should convert &lt;given&gt; to &lt;expect&gt;" executed="True" result="Success" success="True" time="0.0488" asserts="0" description="Should convert &lt;given&gt; to &lt;expect&gt;">
                    <results>
                      <test-case description="Should convert people to person" name="Functions.Singularize.Should convert people to person" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should convert men to man" name="Functions.Singularize.Should convert men to man" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should convert women to woman" name="Functions.Singularize.Should convert women to woman" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should convert geese to goose" name="Functions.Singularize.Should convert geese to goose" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should convert indicies to indicy" name="Functions.Singularize.Should convert indicies to indicy" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should convert oxen to ox" name="Functions.Singularize.Should convert oxen to ox" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should convert knives to knife" name="Functions.Singularize.Should convert knives to knife" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Functions.Hyphenate" executed="True" result="Success" success="True" time="0.1029" asserts="0" description="Functions.Hyphenate">
                <results>
                  <test-case description="Should convert to a hyphenated string" name="Functions.Hyphenate.Should convert to a hyphenated string" time="0.008" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Functions.Number to ordinal words" executed="True" result="Success" success="True" time="0.5406" asserts="0" description="Functions.Number to ordinal words">
                <results>
                  <test-case description="Should convert to words" name="Functions.Number to ordinal words.Should convert to words" time="0.4209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should convert a range to words" name="Functions.Number to ordinal words.Should convert a range to words" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Type Extension Methods" executed="True" result="Success" success="True" time="1.4269" asserts="0" description="Type Extension Methods">
            <results>
              <test-suite type="TestFixture" name="Type Extension Methods.Strings" executed="True" result="Success" success="True" time="0.0612" asserts="0" description="Type Extension Methods.Strings">
                <results>
                  <test-case description="Should transform to Upper Case" name="Type Extension Methods.Strings.Should transform to Upper Case" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should convert to Title Case" name="Type Extension Methods.Strings.Should convert to Title Case" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should convert from Title Case" name="Type Extension Methods.Strings.Should convert from Title Case" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should truncate words" name="Type Extension Methods.Strings.Should truncate words" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should truncate characters" name="Type Extension Methods.Strings.Should truncate characters" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should truncate with optional character" name="Type Extension Methods.Strings.Should truncate with optional character" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should Dehumanize" name="Type Extension Methods.Strings.Should Dehumanize" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should provide quanity: # word" name="Type Extension Methods.Strings.Should provide quanity: # word" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should provide quantity: words" name="Type Extension Methods.Strings.Should provide quantity: words" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should convert Year to roman numerals" name="Type Extension Methods.Strings.Should convert Year to roman numerals" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Type Extension Methods.Integers" executed="True" result="Success" success="True" time="0.0857" asserts="0" description="Type Extension Methods.Integers">
                <results>
                  <test-case description="Should ordanalize" name="Type Extension Methods.Integers.Should ordanalize" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should convert to word" name="Type Extension Methods.Integers.Should convert to word" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should do math in weeks" name="Type Extension Methods.Integers.Should do math in weeks" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Type Extension Methods.TimeSpan" executed="True" result="Success" success="True" time="0.1059" asserts="0" description="Type Extension Methods.TimeSpan">
                <results>
                  <test-case description="Should simplify TimeSpan objects" name="Type Extension Methods.TimeSpan.Should simplify TimeSpan objects" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should simplify TimeSpan objects with selectable precision" name="Type Extension Methods.TimeSpan.Should simplify TimeSpan objects with selectable precision" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Type Extension Methods.DateTime" executed="True" result="Success" success="True" time="0.1274" asserts="0" description="Type Extension Methods.DateTime">
                <results>
                  <test-case description="Should display Now as now when UTC is false" name="Type Extension Methods.DateTime.Should display Now as now when UTC is false" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should display Now as hours ago when UTC is true" name="Type Extension Methods.DateTime.Should display Now as hours ago when UTC is true" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Custom Formats" executed="True" result="Success" success="True" time="1.4954" asserts="0" description="Custom Formats">
            <results>
              <test-suite type="TestFixture" name="Custom Formats.TimeSpan" executed="True" result="Success" success="True" time="0.0122" asserts="0" description="Custom Formats.TimeSpan">
                <results>
                  <test-case description="Should display 1 hour" name="Custom Formats.TimeSpan.Should display 1 hour" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Custom Formats.FileSystem" executed="True" result="Success" success="True" time="0.0636" asserts="0" description="Custom Formats.FileSystem">
                <results>
                  <test-case description="Should display 1 KB" name="Custom Formats.FileSystem.Should display 1 KB" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>